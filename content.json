{"meta":{"title":"Diwen's Coding Blog","subtitle":"Coding, Thinking, Blogging","description":null,"author":null,"url":"http://yoursite.com"},"pages":[{"title":"about","date":"2018-05-25T00:25:17.000Z","updated":"2018-05-25T00:25:50.654Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"Hi."}],"posts":[{"title":"C++显式转换和C语言的强制类型转换之间的区别","slug":"C-显式转换和C语言的强制类型转换之间的区别","date":"2018-05-27T06:25:38.000Z","updated":"2018-05-27T06:33:37.974Z","comments":true,"path":"2018/05/27/C-显式转换和C语言的强制类型转换之间的区别/","link":"","permalink":"http://yoursite.com/2018/05/27/C-显式转换和C语言的强制类型转换之间的区别/","excerpt":"","text":"C语言的强制类型转换的功能更通用，即它具有static_cast, const_cast和reinterpret_cast相似的行为。 关于显式类型转换： static_cast只能应用于明确定义了的类型转换，并且不能用于底层const（lower const）的转换。 const_cast只能改变底层const reinterpret_cast通常用于重新解释一个指针类型，使用需小心。 C语言的强制类型转换没有细分的这么明显，它拥有了这三者的功能。 见代码： 123456789101112131415int a = 0;int *pa = &amp;a; const int *cpa = &amp;a; //static_cast&lt;int*&gt;(cpa); // invalid static_cast from type ‘const int*’ to type ‘int*’//static_cast&lt;char*&gt;(pa); // invalid static_cast from type ‘int*’ to type ‘char*’const_cast&lt;int*&gt;(cpa); // OKreinterpret_cast&lt;char*&gt;(pa);// OK(int*)cpa; // OK(char*)pa; // OKreturn 0;","categories":[{"name":"c++随笔","slug":"c-随笔","permalink":"http://yoursite.com/categories/c-随笔/"}],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"}]},{"title":"Blogging by Hexo","slug":"Blogging-by-Hexo","date":"2018-05-24T20:52:09.000Z","updated":"2018-05-27T06:37:00.148Z","comments":true,"path":"2018/05/24/Blogging-by-Hexo/","link":"","permalink":"http://yoursite.com/2018/05/24/Blogging-by-Hexo/","excerpt":"","text":"环境：CentOS 7 安装Node.js12345$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash$ nvm install stable$ npm install -g hexo-cli 启动Hexo1234$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install$ hexo server 配置修改_config.yml文件。 写作创建新文章： 1$ hexo new &lt;title&gt; 创建新页面： 1$ hexo new page &lt;page_name&gt; 部署到Github Page安装hexo-deployer-git: 1$ npm install hexo-deployer-git --save 修改配置文件_config.yml: 123deploy: type: git repo: git@github.com:demon90s/demon90s.github.io.git 部署命令： 1$ hexo deploy 选择主题see: https://github.com/iTimeTraveler/hexo-theme-hiker","categories":[],"tags":[]}]}